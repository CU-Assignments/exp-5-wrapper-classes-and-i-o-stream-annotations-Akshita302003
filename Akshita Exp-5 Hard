import java.io.*;
import java.util.*;

class Employee implements Serializable {
    private static final long serialVersionUID = 1L;
    int id; String name, designation; double salary;
    Employee(int id, String name, String designation, double salary) {
        this.id = id; this.name = name; this.designation = designation; this.salary = salary;
    }
    public String toString() { return id + ", " + name + ", " + designation + ", " + salary; }
}

public class EmployeeManager {
    static final String FILE = "employees.ser";
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        while (true) {
            System.out.print("1. Add Employee 2. Display All 3. Exit: ");
            switch (sc.nextInt()) {
                case 1 -> addEmployee(sc);
                case 2 -> displayEmployees();
                case 3 -> { sc.close(); return; }
                default -> System.out.println("Invalid choice");
            }
        }
    }
    static void addEmployee(Scanner sc) throws Exception {
        System.out.print("ID: "); int id = sc.nextInt(); sc.nextLine();
        System.out.print("Name: "); String name = sc.nextLine();
        System.out.print("Designation: "); String des = sc.nextLine();
        System.out.print("Salary: "); double salary = sc.nextDouble();
        List<Employee> list = loadEmployees();
        list.add(new Employee(id, name, des, salary));
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(FILE))) {
            oos.writeObject(list);
        }
    }
    static void displayEmployees() throws Exception {
        for (Employee e : loadEmployees()) System.out.println(e);
    }
    static List<Employee> loadEmployees() {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(FILE))) {
            return (List<Employee>) ois.readObject();
        } catch (Exception e) { return new ArrayList<>(); }
    }
}
